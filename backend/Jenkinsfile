pipeline {
    agent any
    stages {
        stage('start') {
            steps {
                slackSend (
                    channel: '#persona', 
                    color: '#FFFF00', 
                    message: "STARTED: Backend Spring Boot Job "
                )
            }
        }
        stage ('Workspace Clean') {
            steps {
             cleanWs()   
            }
        }
        stage ('git clone') {
            steps {
                sh  """
                    echo ${WORKSPACE}
                    git clone https://github.com/hjuuujh/persona-backend.git 
                    """
            }
        }
        stage ('gradle Build') {
            steps {
                sh  """
                    cd persona-backend
                    ./gradlew clean build
                    ./gradlew build
                    """
            }
            post {
                success {
                    slackSend (
                        channel: '#persona', 
                        color: '#00FF00', 
                        message: "SUCCESS: Backend Spring Boot Build"
                    )
                }
                failure {
                    slackSend (
                        channel: '#persona', 
                        color: '#FF0000', 
                        message: "FAIL: Backend Spring Boot Build "
                    )
                }
            }
        }
        stage('test') {
            steps {
                echo 'testing Spring Boot...'
            }
            post {
                success {
                    slackSend (
                        channel: '#persona', 
                        color: '#00FF00', 
                        message: "SUCCESS: Backend Spring Boot Test"
                    )
                }
                failure {
                    slackSend (
                        channel: '#persona', 
                        color: '#FF0000', 
                        message: "FAIL: Backend Spring Boot Test "
                    )
                }
            }
        }
        stage ('Ansible Deploy') { 
            steps {
                script {
                    MY_KEYPAIR_NAME = "persona-key-pair" 
                    MY_APP_PRIVATE_IP = "" 
                    
                    sh  """
                        git clone https://github.com/hjuuujh/persona-ansible.git 
                        cd  persona-ansible 

						sed -i 's/MY_KEYPAIR_NAME/${MY_KEYPAIR_NAME}/g' hosts/hosts
						sed -i 's/MY_APP_PRIVATE_IP/${MY_APP_PRIVATE_IP}/g' hosts/hosts
                        ansible-playbook deploy_backend.yml -i ./hosts/hosts --extra-vars "deploy_hosts=app" 
                        """
                   
                }
            }
            post {
                success {
                    slackSend (
                        channel: '#persona', 
                        color: '#00FF00', 
                        message: "SUCCESS: Backend Spring Boot Deploy [URL: http://ratee.net]"
                    )
                }
                failure {
                    slackSend (
                        channel: '#persona', 
                        color: '#FF0000', 
                        message: "FAIL: Backend Spring Boot  Deploy "
                    )
                }
            }
        }
    }
}
